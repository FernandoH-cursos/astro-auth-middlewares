---
import AuthLayout from "@/layouts/AuthLayout.astro";

// Para acceder a las cookies en Astro, el modo de renderizado debe ser 'ssr', es decir,'output: 'server' o 'output: 'hybrid',

// Obteniendo el valor del email guardado en la cookie 
const email = Astro.cookies.get('email')?.value ?? '';
// Verificando si el email existe en la cookie para obtener el valor de 'remember_me'
const rememberMe = !!email;
---

<AuthLayout>
  <div class="flex justify-center self-center  z-10">
    <div class="p-12 bg-white mx-auto rounded-2xl w-100 ">
        <div class="mb-4">
          <h3 class="font-semibold text-2xl text-gray-800">Registro</h3>
          <p class="text-gray-500">Please sign in to your account.</p>
        </div>

        <form class="space-y-5">
          <div class="space-y-2">
            <label class="text-sm font-medium text-gray-700 tracking-wide">Nombre</label>
            <input 
              type="text" 
              class="w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
              name="name"
              placeholder="John Doe"
            >
          </div>

          <div class="space-y-2">
            <label class="text-sm font-medium text-gray-700 tracking-wide">Email</label>
            <input 
              type="email" 
              class="w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400" 
              name="email"
              value={email}
              placeholder="mail@gmail.com"
            >
          </div>

          <div class="space-y-2">
            <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
              Password
            </label>
            <input 
              type="password" 
              class="w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400" 
              name="password"
              placeholder="Enter your password"
            >
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input 
                type="checkbox" 
                id="remember_me" 
                name="remember_me"
                checked={rememberMe}
                class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
              >
              <label for="remember_me" class="ml-2 block text-sm text-gray-800">
                Recuerdame
              </label>
            </div>

            <div class="text-sm">
              <a href="/login" class="text-green-400 hover:text-green-500">
                ¿Ya tienes una cuenta?
              </a>
            </div>
          </div>

          <div>
            <button type="submit" id="btn-submit" class="disabled:bg-gray-300 w-full flex justify-center bg-green-400  hover:bg-green-500 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500">
              Ingresar
            </button>
          </div>
        </form>

        <div class="pt-5 text-center text-gray-400 text-xs">
          <span>
            Copyright © 2021-{new Date().getFullYear()}
            <a href="https://codepen.io/uidesignhub" rel="" target="_blank" title="Ajimon" class="text-green hover:text-green-500 ">AJI</a>
          </span>
        </div>
    </div>
  </div>
</AuthLayout>

<script>
  import { actions } from "astro:actions";
  import Swal from 'sweetalert2';

  const $form = document.querySelector('form') as HTMLFormElement;
  const $btnSubmit = document.querySelector('#btn-submit') as HTMLButtonElement;

  $form.addEventListener('submit',async(e) => {
    e.preventDefault();

    // Agregando data-attribute al boton con el valor de 'disabled' 
    $btnSubmit.setAttribute('disabled', 'disabled');

    const formData = new FormData($form);

    // Llamando el server action para registrar un usuario 
    const {data,error} = await actions.registerUser(formData);
    if(error){
      Swal.fire({
        icon: 'error',
        title: 'Credenciales no son correctas',
        text: error.message,
      });

      // Removiendo el atributo 'disabled' del boton
      $btnSubmit.removeAttribute('disabled');

      return;
    }
    console.log(data);

    //* Redireccionando al usuario a la pagina protegida. replace() es para evitar que el usuario regrese a la pagina de registro 
    window.location.replace('/protected');

  });
</script>